<h1><%= @analysis_configuration.identifier %>
  <%= link_to "Preview <i class='fas fa-search'></i>".html_safe,
              submission_preview_analysis_configuration_path(@analysis_configuration), class: 'btn btn-sm btn-info  ',
              title: 'Preview the submission form that a user would see when submitting this analysis', target: :_blank,
              data: {toggle: 'tooltip', placement: 'right'} %>
  <%= link_to "Reset <i class='fas fa-undo-alt'></i>".html_safe,
              reset_analysis_parameters_analysis_configuration_path(@analysis_configuration), class: 'btn btn-sm btn-danger',
              title: 'Reset all input/output parameters to defaults from Methods Repository', method: :put,
              data: {toggle: 'tooltip', placement: 'right', confirm: 'Are you sure you want to reset?  This cannot be undone.'} %>
  <%= link_to "<span class='fas fa-chevron-left'></span> Back".html_safe, analysis_configurations_path,
              class: 'btn btn-sm btn-warning pull-right top-margin-5' %>

</h1>
<p class="lead"><%= @analysis_configuration.synopsis %></p>
<dl class="dl-horizontal">
  <dt>Analysis</dt>
  <dd><%= link_to "#{@analysis_configuration.identifier} <i class='fas fa-external-link-square-alt'></i>".html_safe, @analysis_configuration.method_repo_url, target: :_blank %></dd>
  <dt>Configuration</dt>
  <dd><%= link_to "#{@analysis_configuration.configuration_identifier} <i class='fas fa-external-link-square-alt'></i>".html_safe, @analysis_configuration.method_repo_config_url, target: :_blank %></dd>
  <dt>Entity Type</dt>
  <dd><%= @analysis_configuration.entity_type %></dd>
</dl>
<h2>Analysis Parameters <span class="badge"><%= @analysis_configuration.analysis_parameters.count %></span></h2>
<p class="text-muted">These are input/output parameters that will be used to generate user interfaces for submitting
  this analysis, and also govern behavior when syncing successful submissions of this analysis.</p>

<div id="analysis-parameters">
  <div id="tab-root">
    <ul class="nav nav-tabs" role="tablist" id="analysis-parameter-tabs">
      <li role="presentation" class="analysis-parameter-nav active" id="inputs-nav"><a href="#inputs" data-toggle="tab">Inputs <span class="badge"><%= @inputs.size %></a></li>
      <li role="presentation" class="analysis-parameter-nav" id="outputs-nav"><a href="#outputs" data-toggle="tab">Outputs <span class="badge"><%= @outputs.size %></a></li>
    </ul>
    <div class="tab-content">
      <div class="tab-pane active in" id="inputs" role="tabpanel">
        <% @inputs.each do |parameter| %>
          <%= render partial: 'analysis_parameter_form', locals: {analysis_parameter: parameter} %>
        <% end %>
      </div>
      <div class="tab-pane" id="outputs" role="tabpanel">
        <% @outputs.each do |parameter| %>
          <%= render partial: 'analysis_parameter_form', locals: {analysis_parameter: parameter} %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<p>
  <%= link_to "<span class='fas fa-chevron-left'></span> Back".html_safe, analysis_configurations_path, class: 'btn btn-warning' %>
</p>

<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">

    // populate dropdown with JSON response values
    function populateDropdown(formInput, options) {
        formInput.empty();
        formInput.append('<option value=""></option>');
        $.each(options, function(index, value) {
            formInput.append('<option value="' + value + '">' + value + '</option>');
        });
    }

    $('#analysis-parameters').on('change', '.associated-model-field', function() {
        var modelDropdown = $(this);
        var model = modelDropdown.val();
        var form = modelDropdown.closest('.analysis-parameter-form');
        if (model !== '') {
            $.getJSON("<%= load_associated_model_path %>?model=" + model, function(data) {
                // set each dropdown with returned data, or revert to text field if nothing
                $.each(data, function(attribute, values) {
                   var input = form.find('.' + attribute);
                   if (typeof input[0] !== 'undefined') {
                       if (data[attribute].length !== 0) {
                           if (input.is('select')) {
                               populateDropdown(input, values);
                           } else {
                               input.replaceWith('<select class="form-control ' + attribute + ' parameter-select" ' +
                                   'name="analysis_parameter[' + attribute + ']" id="analysis_parameter_' + attribute + '"></select>');
                               var newInput = form.find('.' + attribute);
                               populateDropdown(newInput, values);
                           }
                       } else {
                           input.replaceWith('<input class="form-control ' + attribute + ' parameter-select" type="text" ' +
                               'value="" name="analysis_parameter[' + attribute + ']" id="analysis_parameter_' + attribute + '">');
                       }
                       input.parent().effect('highlight', 1200);
                   }
                });
            });
        }
    });

</script>